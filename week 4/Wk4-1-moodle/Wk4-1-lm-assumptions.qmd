---
title: "Week 4-1 Linear model assumptions"
output: html_document
#   moodlequiz::moodlequiz:
#     replicates: 1
# moodlequiz:
#   category: "Week 4-1 Linear model assumptions"
# editor_options: 
#   chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# remotes::install_github("numbats/moodlequiz")
library(moodlequiz)

library(tidyverse)
```

# Introduction to linear models

## Introduction

In the previous practical, we learned about using linear models to understand how `y` varies with a continuous `x` variable and a discrete `x` variable ...but how do we know our models are any good? Can we evaluate the validity of our linears models? 

In this practical, we will build on what we learned last week on fitting linear modeles. We will build on this knowledge and get you use to making interpretations. We will explore approaches in assessing our model fits and learn ways on how to improve our model fits using transformation. Throughout we will work with various real-world datasets. By the end of today, youâ€™ll have a solid foundation for applying these techniques to models you will be fitting in your own work.

## Key learning objectives

Our learning objective today are:

- **run** a **linear regression** in R using `lm()`
- **interpret** the output of a **linear regression** 
- **run diagnostic checks** on your  model output using `check_model()` to assess whether it meets the assumptions of a linear model.

<!-- using: -->
<!--   - `summary()` -->
<!--   - `parameters()` -->
<!--     - **extract** the **confidence interval** for the **slope** and **intercept** of the **regression** line -->
<!--   - `estimate_means()` -->
<!-- - **plot** the data and the **regression** line -->
<!--   - add the **confidence interval** using output of `estimate_means()` -->

Letâ€™s dive in! ðŸš€ 

![Image credit:  @allison_horst](images/r-learners.png){width=80%} <br>

## Setting up

**Materials:**

Everything you need for this prac is on Moodle

1. Download this week's materials zip file from Moodle, from the course page
2. Unzip the file by: 
  - MacOS: Double clicking the zipfile 
  - Windows: Right click on the zip file and click "Extract All" 
3. Move the extracted folder into the folder where you store materials for `BEES2041/` 
4. **Click on the Rstudio project file, eg. `Wk-4-1-lm-assumptions.Rproj`** to open the RStudio project and you're in!!!

We will be working with various datasets collected. These are in the folder `data/`.

You will work in the relevant Quarto document for this prac. Within each Quarto docs there are several challenges for you to complete on your own devices in order to **answer the questions on Moodle**.

**Setting up: Packages:**

We will also be working with packages from the `tidyverse` and `easystats`, building on skills from previous pracs. You should have these already installed on your machines.

> **Note** that when running R in the browser we need to install the packages each time we start a new session or after you've checked your answer

In case you don't have them installed, here is code for you to do so:
```{r, eval=FALSE}
# Uncomment and run only the lines below only if you have not previously installed these.
# install.packages("tidyverse")
# install.packages("easystats")
```

> Remember to load the packages into R to use em! 

```{r, results='hide', warning=FALSE, message=FALSE}
library(tidyverse)
library(easystats)
```

# LM continuous (Leaves)

## Worked example - Isaac with leaves across climates

![Remember Dr. Isaac Towers?! Image credit: Data Dan](images/isaac-plant-ecosystems.png){width=60%} <br>
We will be working with an example from Dr. Isaac Towers - a postdoc in the School of Biological, Earth & Environmental Sciences. Specifically, Isaac wants to know: How does a leaf's mass per area change with rainfall? His research is published in New Phytologist, you can have a read of his original study [here](https://nph.onlinelibrary.wiley.com/doi/10.1111/nph.19478). We will be working with the data Isaac compiled for us.  Recall, last week we ran a linear model using `log10_leaf_mass_per_area`, `log10_rainfall`, let's try run the same linear model again but with the raw, untransformed data.

### Read in data from a URL link

```{r}
# The link the contains our data
url <- "https://raw.githubusercontent.com/nicercode/BEES2041/refs/heads/main/week%203/Wk3-1-Linear-models/data/towers-2024.csv" 

# Read in the data, drop columns where their names start with `log10`
data_towers <- read_csv(url) #|> 
  #select(-starts_with("log10"))
```


```{r}


parameters(towers_fit)
summary(towers_fit)
means_towers <- estimate_means(towers_fit, by = "log10_rainfall")
means_towers
```


### Fit model

```{r}
towers_og_fit <- lm(leaf_mass_per_area ~ rainfall, data = data_towers)

```

### Check model assumptions

Recall from lectures this week that the assumptions of a linear model assumes:

1. **Linear** relationship between `x` and `y` 
2. **Residuals** are **normally** distributed
3. **Constant variance** of residuals (homogeneity of variance)
4. No major **outliers** / influential observations
5. **Independence** of points (sampling design)
6. Our **samples represent the population** of interest? (sampling design)

The last two assumptions has two do with the sampling design. You can only check the validity of these by carefully considering the how data was collection. The remaining assumptions we can check using the the outputs of `check_model()`.

> Note, you may need to click on "Zoom" to give the diagnostic plots some room to breathe

```{r}
check_model(towers_og_fit)
```

In [this week's lectures](https://youtu.be/zzFyjTnAa8Y?si=LpkRecpF0LSVu91N), Data Data goes through the four main plots neccessary for checking the assumptions of a liner model: 

- Linearity


- Homogeneity of Variance


- Influential Observations


- Normality of Residual

> In your own time, revisit this weeks lectures to learn about what to look for each core model assumption in each plot.

**How to report on your model checks**


> Model checks are not exciting

> Usually we don't include these in a publication or final report. Could include in eSupp. We just need to say and explain what checks were done and how you amended your data if neccessary to improve fit

## Make some adjustments to improve model fit

There are two ways we can improve the model fit for a linear model: 

- apply a transformation on the raw data
- if any, remove outliers 

```{r}
data_towers_transformed <- data_towers |>  # Assign changes in data_towers into a new dataset
  mutate(log10_leaf_mass_per_area =  log10(leaf_mass_per_area), # Create a new log10 transformed leaf mass per area
         log10_rainfall = log10(rainfall)) # Create a new log10 transformed rainfall
```

## Fit model again
```{r}
towerst_transformed_fit <- lm(log10_leaf_mass_per_area ~ log10_rainfall, data = data_towers)
```

## Check model assumptions again

```{r}
check_model(towers_fit)
```



