---
title: "Week 4-2 Generalised linear models"
format: 
  html:    
    self-contained: true
# output:    
#   moodlequiz::moodlequiz:
#     replicates: 1
# moodlequiz:
#   category: "Week 4-2 GLM"
# editor_options: 
#   chunk_output_type: console

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# remotes::install_github("numbats/moodlequiz")
library(moodlequiz)

# Libraries for prac
library(tidyverse)
library(easystats)

# Data files for prac
```

# Intro to Generalised Linear Models

## Introduction

In this session, weâ€™ll explore **G**eneralized **L**inear **M**odels (*GLMs*), a powerful extension of linear regression that helps us analyze data where relationships arenâ€™t strictly linear. GLMs allow us to model different types of responses, making them a go-to tool for many real-world problems.

Weâ€™ll focus on two key types of data:

- **Binomial** data â€“ useful for modeling **probabilities**, like whether an event happens or not (e.g., predicting invasive species presence/absence).
- **Count** data â€“ great for modeling things that happen a certain number of times, like the number of visits to a nesting site or the number of species in a sample.

Weâ€™ll learn how to choose the right model, check if our models fit well, interpret results, . By the end, youâ€™ll be equipped to apply GLMs to your own data!

![Artwork by @allison_horst](images/error-comic.png){width=70%}
<br>

## Key learning objectives

Our learning objective today are:

- **run** a **generalised linear regression** in R using `glm()`
- **run diagnostic checks** on your  model output using `check_model()` to assess whether it meets the assumptions of a linear model.
- **interpret** the output of a **generalised linear regression** using:
  - `summary()`
  - `parameters()`
- **extract** the **confidence interval** for the **slope** and **intercept** of the **regression** line
  - `estimate_means()`
- **plot** the data and the **regression** line
  - add the **confidence interval** using output of `estimate_means()`

Letâ€™s dive in! ðŸš€ 

## Setting up

**Materials:**

Everything you need for this prac is on Moodle

1. Download this week's materials zip file from Moodle, from the course page
2. Unzip the file by: 
  - MacOS: Double clicking the zipfile 
  - Windows: Right click on the zip file and click "Extract All" 
3. Move the extracted folder into the folder where you store materials for `BEES2041/` 
4. **Click on the Rstudio project file, eg. `Wk-4-2-glms.Rproj`** to open the RStudio project and you're in!!!

We will be working with various datasets collected. These are in the folder `data/`.

You will work in the relevant Quarto document for this prac. Within each Quarto docs there are several challenges for you to complete on your own devices in order to **answer the questions on Moodle**.

**Setting up: Packages:**

We will also be working with packages from the `tidyverse` and `easystats`, building on skills from previous pracs. You should have these already installed on your machines.

> **Note** that when running R in the browser we need to install the packages each time we start a new session or after you've checked your answer

In case you don't have them installed, here is code for you to do so:
```{r, eval=FALSE}
# Uncomment and run only the lines below only if you have not previously installed these.
# install.packages("tidyverse")
# install.packages("easystats")
```

> Remember to load the packages into R to use em! 

```{r, results='hide', warning=FALSE, message=FALSE}
library(tidyverse)
library(easystats)
```

# GLM Binomial
## Worked Example: Binomial data
## Read in data
## Fit the model
## Check the model
## Look at model output

# GLM Count
## Worked Example: Count data
## Read in data
## Fit the model
## Check the model
## Look at model output

# Over to you!
## Over to you! GLM - Binomial data
## Example 1:
**Exercises:**

**Questions:**
1.
2.
3.
4.
## Example 2:
**Exercises:**

**Questions:**
1.
2.
3.
4.

## Over to you! GLM - Count data
## Example 1:
**Exercises:**

**Questions:**
1.
2.
3.
4.
## Example 2:
**Exercises:**

**Questions:**
1.
2.
3.
4.

